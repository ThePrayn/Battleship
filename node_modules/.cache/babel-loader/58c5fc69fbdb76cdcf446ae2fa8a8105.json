{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nomad\\\\Desktop\\\\Battleship\\\\Battleship\\\\src\\\\components\\\\GameBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport PlayerGrid from './PlayerGrid';\nimport ComputerGrid from './ComputerGrid';\nimport InfoBoard from './InfoBoard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GameBoard = () => {\n  _s();\n\n  const [playerGameGrid, setPlayerGameGrid] = useStaten  const [playerShipYard, setPlayerShipYard] = useState([{\n    shipNumber: 0,\n    shipLength: 5,\n    shipName: 'Aircraft Carrier',\n    hitNumber: 0,\n    sunkStatus: false\n  }, {\n    shipNumber: 1,\n    shipLength: 4,\n    shipName: 'Battleship',\n    hitNumber: 0,\n    sunkStatus: false\n  }, {\n    shipNumber: 2,\n    shipLength: 3,\n    shipName: 'Submarine',\n    hitNumber: 0,\n    sunkStatus: false\n  }, {\n    shipNumber: 3,\n    shipLength: 3,\n    shipName: 'Cruiser',\n    hitNumber: 0,\n    sunkStatus: false\n  }, {\n    shipNumber: 4,\n    shipLength: 2,\n    shipName: 'Destroyer',\n    hitNumber: 0,\n    sunkStatus: false\n  }]);\n  const [computerGameGrid, setComputerGameGrid] = useState([['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.']]);\n  const [computerShipYard, setComputerShipYard] = useState([{\n    shipNumber: 0,\n    shipLength: 5,\n    shipName: 'Aircraft Carrier',\n    hitNumber: 0,\n    sunkStatus: false\n  }, {\n    shipNumber: 1,\n    shipLength: 4,\n    shipName: 'Battleship',\n    hitNumber: 0,\n    sunkStatus: false\n  }, {\n    shipNumber: 2,\n    shipLength: 3,\n    shipName: 'Submarine',\n    hitNumber: 0,\n    sunkStatus: false\n  }, {\n    shipNumber: 3,\n    shipLength: 3,\n    shipName: 'Cruiser',\n    hitNumber: 0,\n    sunkStatus: false\n  }, {\n    shipNumber: 4,\n    shipLength: 2,\n    shipName: 'Destroyer',\n    hitNumber: 0,\n    sunkStatus: false\n  }]);\n  const [playerPlacedShipsNumber, setPlayerPlacedShipsNumber] = useState(0);\n  const [winnerInfo, setWinnerInfo] = useState('');\n\n  const computerShipPlacementHandler = () => {\n    const computerGameGridCopyn    let placedShipsNumber = 0;\n\n    while (placedShipsNumber !== 5) {\n      let shipLength = computerShipYard[placedShipsNumber].shipLength;\n      let rowIndex = Math.floor(Math.random() * 10);\n      let columnIndex = Math.floor(Math.random() * 10);\n      let shipDirection = Math.floor(Math.random() * 10);\n\n      if (isPlacementAllowed(computerGameGridCopy, rowIndex, columnIndex, shipLength, shipDirection)) {\n        if (shipDirection % 2 === 0) {\n          for (let i = 0; i < shipLength; i++) {\n            computerGameGridCopy[rowIndex] = [...computerGameGridCopy[rowIndex]];\n            computerGameGridCopy[rowIndex][columnIndex + i] = computerShipYard[placedShipsNumber].shipNumber;\n          }\n        } else {\n          for (let i = 0; i < shipLength; i++) {\n            computerGameGridCopy[rowIndex + i] = [...computerGameGridCopy[rowIndex + i]];\n            computerGameGridCopy[rowIndex + i][columnIndex] = computerShipYard[placedShipsNumber].shipNumber;\n          }\n        }\n\n        placedShipsNumber++;\n      }\n    }\n\n    setComputerGameGrid([...computerGameGridCopy]);\n  };\n\n  const isPlacementAllowed = (gameGrid, rowIndex, columnIndex, shipLength, shipDirection) => {\n    let checkNumber = 0;\n\n    if (shipDirection % 2 === 0) {\n      if (columnIndex + shipLength > 10) {\n        return false;\n      }\n\n      for (let i = 0; i < shipLength; i++) {\n        if (isSquareFree(gameGrid, rowIndex, columnIndex + i)) {\n          checkNumber++;\n        }\n      }\n\n      if (checkNumber === shipLength) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      if (rowIndex + shipLength > 10) {\n        return false;\n      }\n\n      for (let i = 0; i < shipLength; i++) {\n        if (isSquareFree(gameGrid, rowIndex + i, columnIndex)) {\n          checkNumber++;\n        }\n      }\n\n      if (checkNumber === shipLength) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  };\n\n  const isSquareFree = (gameGrid, rowIndex, columnIndex) => {\n    for (let i = -1; i <= 1; i++) {\n      for (let j = -1; j <= 1; j++) {\n        if (gameGrid[rowIndex + i] !== undefined && gameGrid[rowIndex + i][columnIndex + j] !== undefined) {\n          if (gameGrid[rowIndex + i][columnIndex + j] >= 0) {\n            return false;\n          }\n        }\n      }\n    }\n\n    return true;\n  };\n\n  useEffect(() => {\n    computerShipPlacementHandler();\n  }, []);\n\n  const computerShotGenerator = () => {\n    const rowIndexRandom = Math.floor(Math.random() * 10);\n    const columnIndexRandom = Math.floor(Math.random() * 10);\n\n    if (playerGameGrid[rowIndexRandom][columnIndexRandom] === 'M' || playerGameGrid[rowIndexRandom][columnIndexRandom] === 'X') {\n      computerShotGenerator();\n    } else {\n      const playerGameGridCopy = [...playerGameGrid];\n      playerGameGridCopy[rowIndexRandom] = [...playerGameGridCopy[rowIndexRandom]];\n\n      if (playerGameGrid[rowIndexRandom][columnIndexRandom] === '.') {\n        playerGameGridCopy[rowIndexRandom][columnIndexRandom] = 'M';\n        setPlayerGameGrid([...playerGameGridCopy]);\n      } else {\n        playerShipHitHandler(playerGameGridCopy[rowIndexRandom][columnIndexRandom]);\n        playerGameGridCopy[rowIndexRandom][columnIndexRandom] = 'X';\n        setPlayerGameGrid([...playerGameGridCopy]);\n      }\n    }\n  };\n\n  const playerShipHitHandler = shipNumber => {\n    const playerShipYardCopy = [...playerShipYard];\n    const hitNumberCopy = playerShipYardCopy[shipNumber].hitNumber;\n    playerShipYardCopy[shipNumber] = { ...playerShipYardCopy[shipNumber],\n      hitNumber: hitNumberCopy + 1\n    };\n\n    if (playerShipYardCopy[shipNumber].hitNumber === playerShipYardCopy[shipNumber].shipLength) {\n      playerShipYardCopy[shipNumber] = { ...playerShipYardCopy[shipNumber],\n        sunkStatus: true\n      };\n    }\n\n    setPlayerShipYard(playerShipYardCopy);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gameBoard\",\n    children: [/*#__PURE__*/_jsxDEV(InfoBoard, {\n      setPlayerGameGrid: setPlayerGameGrid,\n      setPlayerShipYard: setPlayerShipYard,\n      setComputerGameGrid: setComputerGameGrid,\n      setComputerShipYard: setComputerShipYard,\n      setPlayerPlacedShipsNumber: setPlayerPlacedShipsNumber,\n      winnerInfo: winnerInfo,\n      setWinnerInfo: setWinnerInfo,\n      computerShipPlacementHandler: computerShipPlacementHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlayerGrid, {\n      playerGameGrid: playerGameGrid,\n      setPlayerGameGrid: setPlayerGameGrid,\n      playerShipYard: playerShipYard,\n      setPlayerShipYard: setPlayerShipYard,\n      playerPlacedShipsNumber: playerPlacedShipsNumber,\n      setPlayerPlacedShipsNumber: setPlayerPlacedShipsNumber,\n      setWinnerInfo: setWinnerInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ComputerGrid, {\n      computerGameGrid: computerGameGrid,\n      setComputerGameGrid: setComputerGameGrid,\n      computerShipYard: computerShipYard,\n      setComputerShipYard: setComputerShipYard,\n      computerShotGenerator: computerShotGenerator,\n      playerPlacedShipsNumber: playerPlacedShipsNumber,\n      winnerInfo: winnerInfo,\n      setWinnerInfo: setWinnerInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GameBoard, \"TiKYmhG7C1aqCnvaTc8MtKyCGmA=\");\n\n_c = GameBoard;\nexport default GameBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"sources":["C:/Users/nomad/Desktop/Battleship/Battleship/src/components/GameBoard.js"],"names":["React","useEffect","useState","PlayerGrid","ComputerGrid","InfoBoard","GameBoard","playerGameGrid","setPlayerGameGrid","playerShipYard","setPlayerShipYard","shipNumber","shipLength","shipName","hitNumber","sunkStatus","computerGameGrid","setComputerGameGrid","computerShipYard","setComputerShipYard","playerPlacedShipsNumber","setPlayerPlacedShipsNumber","winnerInfo","setWinnerInfo","computerShipPlacementHandler","computerGameGridCopy","placedShipsNumber","rowIndex","Math","floor","random","columnIndex","shipDirection","isPlacementAllowed","i","gameGrid","checkNumber","isSquareFree","j","undefined","computerShotGenerator","rowIndexRandom","columnIndexRandom","playerGameGridCopy","playerShipHitHandler","playerShipYardCopy","hitNumberCopy"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport PlayerGrid from './PlayerGrid';\r\nimport ComputerGrid from './ComputerGrid';\r\nimport InfoBoard from './InfoBoard';\r\n\r\nconst GameBoard = () => {\r\n  const [playerGameGrid, setPlayerGameGrid] = useState([\r\n    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\r\n    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\r\n    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\r\n    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\r\n    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\r\n    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\r\n    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\r\n    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\r\n    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\r\n    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.']\r\n  ]);\r\n\r\n  const [playerShipYard, setPlayerShipYard] = useState([\r\n    {shipNumber: 0, shipLength: 5, shipName: 'Aircraft Carrier', hitNumber: 0, sunkStatus: false},\r\n    {shipNumber: 1, shipLength: 4, shipName: 'Battleship',  hitNumber: 0, sunkStatus: false},\r\n    {shipNumber: 2, shipLength: 3, shipName: 'Submarine',  hitNumber: 0, sunkStatus: false},\r\n    {shipNumber: 3, shipLength: 3, shipName: 'Cruiser',  hitNumber: 0, sunkStatus: false},\r\n    {shipNumber: 4, shipLength: 2, shipName: 'Destroyer',  hitNumber: 0, sunkStatus: false}\r\n  ]);\r\n\r\n  const [computerGameGrid, setComputerGameGrid] = useState([\r\n    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\r\n    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\r\n    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\r\n    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\r\n    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\r\n    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\r\n    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\r\n    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\r\n    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\r\n    ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.']\r\n  ]);\r\n\r\n  const [computerShipYard, setComputerShipYard] = useState([\r\n    {shipNumber: 0, shipLength: 5, shipName: 'Aircraft Carrier', hitNumber: 0, sunkStatus: false},\r\n    {shipNumber: 1, shipLength: 4, shipName: 'Battleship',  hitNumber: 0, sunkStatus: false},\r\n    {shipNumber: 2, shipLength: 3, shipName: 'Submarine',  hitNumber: 0, sunkStatus: false},\r\n    {shipNumber: 3, shipLength: 3, shipName: 'Cruiser',  hitNumber: 0, sunkStatus: false},\r\n    {shipNumber: 4, shipLength: 2, shipName: 'Destroyer',  hitNumber: 0, sunkStatus: false}\r\n  ]);\r\n\r\n  const [playerPlacedShipsNumber, setPlayerPlacedShipsNumber] = useState(0);\r\n\r\n  const [winnerInfo, setWinnerInfo] = useState('');\r\n\r\n  const computerShipPlacementHandler = () => {\r\n    \r\n    const computerGameGridCopy = [\r\n      ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\r\n      ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\r\n      ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\r\n      ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\r\n      ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\r\n      ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\r\n      ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\r\n      ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\r\n      ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],\r\n      ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.']\r\n    ];\r\n\r\n    let placedShipsNumber = 0;\r\n\r\n    while (placedShipsNumber !== 5) {\r\n      let shipLength = computerShipYard[placedShipsNumber].shipLength;\r\n      let rowIndex = Math.floor(Math.random() * 10);\r\n      let columnIndex = Math.floor(Math.random() * 10);\r\n      let shipDirection = Math.floor(Math.random() * 10);\r\n\r\n      if (isPlacementAllowed(computerGameGridCopy, rowIndex, columnIndex, shipLength, shipDirection)) {\r\n        if (shipDirection%2 === 0) {\r\n          for (let i = 0; i < shipLength; i++) {\r\n            computerGameGridCopy[rowIndex] = [...computerGameGridCopy[rowIndex]];\r\n            computerGameGridCopy[rowIndex][columnIndex + i] = computerShipYard[placedShipsNumber].shipNumber;\r\n          }\r\n        } else {\r\n          for (let i = 0; i < shipLength; i++) {\r\n            computerGameGridCopy[rowIndex + i] = [...computerGameGridCopy[rowIndex + i]];\r\n            computerGameGridCopy[rowIndex + i][columnIndex] = computerShipYard[placedShipsNumber].shipNumber;\r\n          }\r\n        }\r\n        placedShipsNumber++;\r\n      }\r\n    }\r\n    setComputerGameGrid([...computerGameGridCopy]);\r\n  }\r\n\r\n  const isPlacementAllowed = (gameGrid, rowIndex, columnIndex, shipLength, shipDirection) => {\r\n    let checkNumber = 0;\r\n\r\n    if (shipDirection%2 === 0) {\r\n      if ((columnIndex + shipLength) > 10) {\r\n        return false;\r\n      }\r\n\r\n      for (let i = 0; i < shipLength; i++) {\r\n        if (isSquareFree(gameGrid, rowIndex, columnIndex + i)) {\r\n          checkNumber++;\r\n        }\r\n      }\r\n      if (checkNumber === shipLength) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n\r\n    } else {\r\n      if ((rowIndex + shipLength) > 10) {\r\n        return false;\r\n      }\r\n\r\n      for (let i = 0; i < shipLength; i++) {\r\n        if (isSquareFree(gameGrid, rowIndex + i, columnIndex)) {\r\n          checkNumber++;\r\n        }\r\n      }\r\n      if (checkNumber === shipLength) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  const isSquareFree = (gameGrid, rowIndex, columnIndex) => {\r\n    for (let i = -1; i <= 1; i++) {\r\n      for (let j = -1; j <= 1; j++) {\r\n        if (gameGrid[rowIndex + i] !== undefined && gameGrid[rowIndex + i][columnIndex + j] !== undefined) {\r\n          if (gameGrid[rowIndex + i][columnIndex + j] >= 0) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  useEffect(() => {\r\n    computerShipPlacementHandler();\r\n  }, [])\r\n\r\n  const computerShotGenerator = () => {\r\n    const rowIndexRandom = Math.floor(Math.random() * 10);\r\n    const columnIndexRandom = Math.floor(Math.random() * 10);\r\n\r\n    if (playerGameGrid[rowIndexRandom][columnIndexRandom] === 'M' || playerGameGrid[rowIndexRandom][columnIndexRandom] === 'X') {\r\n      computerShotGenerator();\r\n    } else {\r\n      const playerGameGridCopy = [...playerGameGrid];\r\n      playerGameGridCopy[rowIndexRandom] = [...playerGameGridCopy[rowIndexRandom]];\r\n      if (playerGameGrid[rowIndexRandom][columnIndexRandom] === '.') {\r\n        playerGameGridCopy[rowIndexRandom][columnIndexRandom] = 'M';\r\n        setPlayerGameGrid([...playerGameGridCopy]);\r\n      } else {\r\n        playerShipHitHandler(playerGameGridCopy[rowIndexRandom][columnIndexRandom]);\r\n        playerGameGridCopy[rowIndexRandom][columnIndexRandom] = 'X';\r\n        setPlayerGameGrid([...playerGameGridCopy]);\r\n      }\r\n    }\r\n  }\r\n\r\n  const playerShipHitHandler = (shipNumber) => {\r\n    const playerShipYardCopy = [...playerShipYard];\r\n    const hitNumberCopy = playerShipYardCopy[shipNumber].hitNumber;\r\n    playerShipYardCopy[shipNumber] = {...playerShipYardCopy[shipNumber], hitNumber: hitNumberCopy + 1};\r\n\r\n    if (playerShipYardCopy[shipNumber].hitNumber === playerShipYardCopy[shipNumber].shipLength) {\r\n      playerShipYardCopy[shipNumber] = {...playerShipYardCopy[shipNumber], sunkStatus: true};\r\n    }\r\n    setPlayerShipYard(playerShipYardCopy);\r\n  }\r\n\r\n  return (\r\n    <div className='gameBoard'>\r\n      <InfoBoard \r\n        setPlayerGameGrid={setPlayerGameGrid}\r\n        setPlayerShipYard={setPlayerShipYard}\r\n        setComputerGameGrid={setComputerGameGrid}\r\n        setComputerShipYard={setComputerShipYard}\r\n        setPlayerPlacedShipsNumber={setPlayerPlacedShipsNumber}\r\n        winnerInfo={winnerInfo}\r\n        setWinnerInfo={setWinnerInfo}\r\n        computerShipPlacementHandler={computerShipPlacementHandler}\r\n      />\r\n      <PlayerGrid \r\n        playerGameGrid={playerGameGrid}\r\n        setPlayerGameGrid={setPlayerGameGrid}\r\n        playerShipYard={playerShipYard}\r\n        setPlayerShipYard={setPlayerShipYard}\r\n        playerPlacedShipsNumber={playerPlacedShipsNumber}\r\n        setPlayerPlacedShipsNumber={setPlayerPlacedShipsNumber}\r\n        setWinnerInfo={setWinnerInfo}\r\n      />\r\n      <ComputerGrid\r\n        computerGameGrid={computerGameGrid}\r\n        setComputerGameGrid={setComputerGameGrid}\r\n        computerShipYard={computerShipYard}\r\n        setComputerShipYard={setComputerShipYard}\r\n        computerShotGenerator={computerShotGenerator}\r\n        playerPlacedShipsNumber={playerPlacedShipsNumber}\r\n        winnerInfo={winnerInfo}\r\n        setWinnerInfo={setWinnerInfo}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameBoard;"]},"metadata":{},"sourceType":"module"}