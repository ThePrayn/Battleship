{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nomad\\\\Desktop\\\\bs\\\\battleships-game-page\\\\src\\\\components\\\\ComputerGrid.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect } from 'react';\nimport ComputerSquare from './ComputerSquare';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ComputerGrid = _ref => {\n  _s();\n\n  let {\n    computerGameGrid,\n    setComputerGameGrid,\n    computerShipYard,\n    setComputerShipYard,\n    computerShotGenerator,\n    playerPlacedShipsNumber,\n    winnerInfo,\n    setWinnerInfo\n  } = _ref;\n\n  const squareShotHandler = (rowIndex, columnIndex) => {\n    const computerGameGridCopy = [...computerGameGrid];\n    computerGameGridCopy[rowIndex] = [...computerGameGridCopy[rowIndex]];\n\n    if (computerGameGrid[rowIndex][columnIndex] === '.') {\n      computerGameGridCopy[rowIndex][columnIndex] = 'M';\n      setComputerGameGrid([...computerGameGridCopy]);\n      computerShotGenerator();\n    } else if (computerGameGrid[rowIndex][columnIndex] === 'M' || computerGameGrid[rowIndex][columnIndex] === 'X') {\n      console.log(\"This move is not allowed!\");\n    } else {\n      shipHitHandler(computerGameGridCopy[rowIndex][columnIndex]);\n      computerGameGridCopy[rowIndex][columnIndex] = 'X';\n      setComputerGameGrid([...computerGameGridCopy]);\n      computerShotGenerator();\n    }\n  };\n\n  const shipHitHandler = shipNumber => {\n    const computerShipYardCopy = [...computerShipYard];\n    const hitNumberCopy = computerShipYardCopy[shipNumber].hitNumber;\n    computerShipYardCopy[shipNumber] = { ...computerShipYardCopy[shipNumber],\n      hitNumber: hitNumberCopy + 1\n    };\n\n    if (computerShipYardCopy[shipNumber].hitNumber === computerShipYardCopy[shipNumber].shipLength) {\n      computerShipYardCopy[shipNumber] = { ...computerShipYardCopy[shipNumber],\n        sunkStatus: true\n      };\n    }\n\n    setComputerShipYard(computerShipYardCopy);\n  };\n\n  useEffect(() => {\n    let availableShips = computerShipYard.filter(ship => ship.sunkStatus === false);\n\n    if (availableShips.length === 0) {\n      setWinnerInfo('–¢—ã –≤—ã–∏–≥—Ä–∞–ª! –ü–æ–∑–¥—Ä–∞–≤–ª—è—é!üéâ');\n    }\n  }, [computerShipYard]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"computerGrid\",\n    children: computerGameGrid === null || computerGameGrid === void 0 ? void 0 : computerGameGrid.map((squaresArray, arrayNumber) => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: squaresArray === null || squaresArray === void 0 ? void 0 : squaresArray.map((square, squareNumber) => {\n          return /*#__PURE__*/_jsxDEV(ComputerSquare, {\n            rowIndex: arrayNumber,\n            columnIndex: squareNumber,\n            computerGameGrid: computerGameGrid,\n            squareShotHandler: squareShotHandler,\n            playerPlacedShipsNumber: playerPlacedShipsNumber,\n            winnerInfo: winnerInfo\n          }, `${arrayNumber}${squareNumber}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this);\n        })\n      }, arrayNumber, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ComputerGrid, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ComputerGrid;\nexport default ComputerGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComputerGrid\");","map":{"version":3,"sources":["C:/Users/nomad/Desktop/bs/battleships-game-page/src/components/ComputerGrid.js"],"names":["React","useEffect","ComputerSquare","ComputerGrid","computerGameGrid","setComputerGameGrid","computerShipYard","setComputerShipYard","computerShotGenerator","playerPlacedShipsNumber","winnerInfo","setWinnerInfo","squareShotHandler","rowIndex","columnIndex","computerGameGridCopy","console","log","shipHitHandler","shipNumber","computerShipYardCopy","hitNumberCopy","hitNumber","shipLength","sunkStatus","availableShips","filter","ship","length","map","squaresArray","arrayNumber","square","squareNumber"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport ComputerSquare from './ComputerSquare';\r\n\r\nconst ComputerGrid = ({ \r\n  computerGameGrid, \r\n  setComputerGameGrid, \r\n  computerShipYard, \r\n  setComputerShipYard, \r\n  computerShotGenerator, \r\n  playerPlacedShipsNumber, \r\n  winnerInfo, \r\n  setWinnerInfo \r\n}) => {  \r\n  const squareShotHandler = (rowIndex, columnIndex) => {\r\n    const computerGameGridCopy = [...computerGameGrid];\r\n    computerGameGridCopy[rowIndex] = [...computerGameGridCopy[rowIndex]];\r\n    if(computerGameGrid[rowIndex][columnIndex] === '.') {\r\n      computerGameGridCopy[rowIndex][columnIndex] = 'M';\r\n      setComputerGameGrid([...computerGameGridCopy]);\r\n      computerShotGenerator();\r\n    } else if(computerGameGrid[rowIndex][columnIndex] === 'M' || computerGameGrid[rowIndex][columnIndex] === 'X') {\r\n      console.log(\"This move is not allowed!\");\r\n    } else {\r\n      shipHitHandler(computerGameGridCopy[rowIndex][columnIndex]); \r\n      computerGameGridCopy[rowIndex][columnIndex] = 'X';\r\n      setComputerGameGrid([...computerGameGridCopy]);\r\n      computerShotGenerator();\r\n    }\r\n  }\r\n\r\n  const shipHitHandler = (shipNumber) => {\r\n    const computerShipYardCopy = [...computerShipYard];\r\n    const hitNumberCopy = computerShipYardCopy[shipNumber].hitNumber;\r\n    computerShipYardCopy[shipNumber] = {...computerShipYardCopy[shipNumber], hitNumber: hitNumberCopy + 1};\r\n\r\n    if (computerShipYardCopy[shipNumber].hitNumber === computerShipYardCopy[shipNumber].shipLength) {\r\n      computerShipYardCopy[shipNumber] = {...computerShipYardCopy[shipNumber], sunkStatus: true};\r\n    }\r\n    setComputerShipYard(computerShipYardCopy);\r\n  }\r\n\r\n  useEffect(() => {\r\n    let availableShips = computerShipYard.filter(ship => ship.sunkStatus === false);\r\n    if (availableShips.length === 0) {\r\n      setWinnerInfo('–¢—ã –≤—ã–∏–≥—Ä–∞–ª! –ü–æ–∑–¥—Ä–∞–≤–ª—è—é!üéâ');\r\n    }\r\n  }, [computerShipYard]);\r\n\r\n  return (\r\n    <div className='computerGrid'>\r\n      {computerGameGrid?.map((squaresArray, arrayNumber) => {\r\n        return (\r\n          <React.Fragment key={arrayNumber}>\r\n            {squaresArray?.map((square, squareNumber) => {\r\n              return (\r\n                <ComputerSquare \r\n                  key={`${arrayNumber}${squareNumber}`}\r\n                  rowIndex={arrayNumber}\r\n                  columnIndex={squareNumber}\r\n                  computerGameGrid={computerGameGrid}\r\n                  squareShotHandler={squareShotHandler}\r\n                  playerPlacedShipsNumber={playerPlacedShipsNumber}\r\n                  winnerInfo={winnerInfo}\r\n                >\r\n                </ComputerSquare>\r\n              )\r\n            })}\r\n          </React.Fragment>);\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComputerGrid;"]},"metadata":{},"sourceType":"module"}